<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.groupware.project.EmployeesDAO">
<select id="login" resultType="int">
	select count(*) from employees where userid=#{param1} and password=#{param2}
</select>
<select id="getListOne" resultType="com.groupware.project.EmployeesDTO">
	select * from employees where userid=#{param1}
</select>

<update id="updateContact">
	UPDATE address_book
	SET
    NAME = #{param1},
    POSITION = #{param2},
    phone = #{param3},
    email = #{param4},
    department = #{param5},
    company = #{param6},
    company_phone = #{param7},
    company_address = #{param8},
    memo = #{param9},
    group_name = #{param10}
	WHERE
    address_book_id = #{param11}
</update>

<select id="getList" resultType="com.groupware.project.EmployeesDTO"> <!-- 회원목록 조회 -->
	select a.name, a.userid, b.departmentName, a.position, a.email, a.phoneNumber, a.hireDate 
	from employees a inner join departments b on a.departmentID = b.departmentID
	 limit #{param1}, #{param2}
</select>
<select id="getTotal" resultType="int">
	select count(*) from employees
</select>
<!-- 주소록 가져오는데 사용 -->
<select id="getListAll" resultType="com.groupware.project.EmployeesDTO"> <!-- 주소록 가져오는데 사용 -->
	select * from employees where userid != #{param1}
</select>

<insert id="signup">
	insert into employees set userid=#{param1}, password=#{param2}, name=#{param3}, departmentID=#{param4}, position=#{param5}, birthdate=#{param6},
			phoneNumber=#{param7}, address=#{param8}, email=#{param9}, salary=#{param10}, profilepicture=#{param11}, hiredate=#{param12} 
</insert>
<select id="insert_addressBook" resultType="com.groupware.project.EmployeesDTO"> <!-- 주소록 인서트에 사용 -->
	INSERT INTO address_book (Name, Position, phone, email, department, company, company_phone, company_address, memo, group_name, Writer_id)
	VALUES (#{param1}, #{param2} , #{param3}, #{param4}, #{param5}, #{param6}, #{param7}, #{param8}, #{param9}, #{param10}, #{param11});
</select>

<delete id="delete_addressBook">
	DELETE FROM address_book
	WHERE address_book_id= #{param1};
</delete>


<select id="getListSelect" resultType="com.groupware.project.EmployeesDTO">
	select a.name, a.userid, b.departmentName, a.position, a.birthDate, a.phoneNumber, a.address, a.email, a.salary , a.hireDate, a.profilePicture
	from employees a inner join departments b on a.departmentID = b.departmentID
	 where userid=#{userid}
</select>


<update id="modify">
	update employees set name=#{param1}, departmentID=#{param2}, position=#{param3}, phoneNumber=#{param4}, address=#{param5}, email=#{param6}, salary=#{param7}, profilePicture=#{param8}
	where userid=#{param9}
</update>

<!-- 밑에는개인 연락처 필터링 -->
<select id="getListPaAll" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	select * from address_book where Writer_id = #{param1}
</select>

<delete id="deleteEMP">
	delete from employees where userid=#{userid}
</delete>

<select id="getListPa_sort_name" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN name COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN name COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN name COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  name COLLATE utf8mb4_unicode_ci;

</select>

<select id="getListPa_sort_position" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN position COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN position COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN position COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  position COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_phone" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN phone COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN phone COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN phone COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  phone COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_email" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN email COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN email COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN email COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  email COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_department" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN department COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN department COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN department COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  department COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_company" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN company COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN company COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN company COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  company COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_companyPhone" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN company_Phone COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN company_Phone COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN company_Phone COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  company_Phone COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_companyAddress" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN company_Address COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN company_Address COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN company_Address COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  company_Address COLLATE utf8mb4_unicode_ci;
</select>
<select id="getListPa_sort_memo" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
	SELECT *
	FROM address_book
	WHERE Writer_id = #{param1}
	ORDER BY 
	  CASE
	    WHEN memo COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1 
	    WHEN memo COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2 
	    WHEN memo COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3 
	    ELSE 4 
	  END,
	  memo COLLATE utf8mb4_unicode_ci;
</select>

<select id="getListPa_sort_group" resultType="com.groupware.project.AddressbookDTO"> <!-- 주소록 가져오는데 사용 -->
SELECT * FROM address_book WHERE Writer_id = #{param1} ORDER BY
  CASE
    WHEN group_name COLLATE utf8mb4_unicode_ci REGEXP '^[가-힣]' THEN 1
    WHEN group_name COLLATE utf8mb4_unicode_ci REGEXP '^[A-Za-z]' THEN 2
    WHEN group_name COLLATE utf8mb4_unicode_ci REGEXP '^[0-9]' THEN 3
    ELSE 4
  END, group_name;
	  
</select>
</mapper>